node{
	//todo - Store port to Device type in map, after all bugs are fixed. 
	def remoteHost
	def remoteUser
	def baseDir
	def branch
	def checkoutNeeded=true;
	def sizeoflogfiles
	def numberoflogfiles
	def logRoot
	stage ('Parse Params')
	{
                        echo this.params.toString()

		
		if (this.params.branch!=null)
                        {
                                branch=this.params.branch
                        }
                        else
                        {
                                error ('branch is not specified')
                        }

		  if(this.params.checkoutNeeded!=null)
                        {
                                checkoutNeeded=this.params.checkoutNeeded;
                        }

		
		
		
	}

	stage ('Checkout'){
		if(checkoutNeeded)
		{

			checkout([$class: 'GitSCM',
					branches: [],
					userRemoteConfigs: [[credentialsId: 'deployjava',
					url: 'git@gitlab.com:axestrack_bankend/gps-kafka-consumer.git']]])
		}
	}

	stage ('Build'){
		echo "Building listener..."
			sh "ls -la ${pwd()}"
			sh "ls -la ."
			sh "pwd"
			//buildFolder="${WORKSPACE}@script"
			//	buildfolder="."
			retVal=sh(returnStatus: true,script:"sh ./build.sh")
			echo "Build returned ${retVal.toString()}"
			if (retVal!=0)
			{
				error("Build failed with return value ${retVal.toString()}") 
			}	
		echo "Finished building...."

	}
	stage('SSH transfer and restart') {


	}
}

